{"mappings":"YAAeA,SAASC,cAAc,UAU/BC,iBAAiB,SARR,WACdC,YAAW,WACTC,MAAM,mB,GACL,I,IAMLC,QAAQC,IAAI,aAEZH,YAAW,WAETE,QAAQC,IAAI,a,GACX,KAGHD,QAAQC,IAAI,aAEZ,IAAMC,EAAO,IAAIC,KACjBH,QAAQC,IAAIC,EAAKE,eAIjB,IAA4BC,KAiBR,QAhBX,IAAIC,SAAQ,SAACC,EAASC,GAC3BR,QAAQC,IAAI,qBAA8BQ,OAATJ,IAEjCP,YAAW,WAKPS,EAAQ,gB,GAIT,I,KAKJG,MAAK,SAAAC,G,OAAQX,QAAQC,IAAIU,E,IACzBC,OAAM,SAAAC,G,OAASb,QAAQa,MAAMA,E,IAE9B,IAAMC,EAAc,SAACC,EAAMC,GAC3B,OAAO,IAAIV,SAAQ,SAAAC,GACjBT,YAAW,W,OAAMS,EAAQQ,E,GAAOC,E,KAI9BC,EAAWH,EAAY,iBAAkB,KACzCI,EAAWJ,EAAY,iBAAkB,KAE/CR,QAAQa,IAAI,CAACF,EAAUC,IACpBR,MAAK,SAAAU,G,OAASpB,QAAQC,IAAImB,E,IAC1BR,OAAM,SAAAC,G,OAASb,QAAQC,IAAIY,E","sources":["src/js/04-training.js"],"sourcesContent":["const button = document.querySelector(\"button\");\n\nconst onClick = () => {\n  setTimeout(() => {\n    alert(\"I love async JS!\");\n  }, 2000);\n};\n\n// Two seconds after clicking the button, \n// alert specified inside the setTimeout callback will appear.\nbutton.addEventListener(\"click\", onClick);\nconsole.log(\"First log\");\n\nsetTimeout(() => {\n  // Will run last, after 2000 milliseconds\n  console.log(\"Second log\");\n}, 5000);\n\n// Will run second\nconsole.log(\"Third log\");\n\nconst date = new Date();\nconsole.log(date.getFullYear());\n\n\n\nconst fetchUserFromServer = username => {\n  return new Promise((resolve, reject) => {\n    console.log(`Fetching data for ${username}`);\n\n    setTimeout(() => {\n      // Change value of isSuccess variable to simulate request status\n      const isSuccess = true;\n\n      if (isSuccess) {\n        resolve(\"success value\");\n      } else {\n        reject(\"error\");\n      }\n    }, 2000);\n  });\n};\n\nfetchUserFromServer(\"Mango\")\n  .then(user => console.log(user))\n  .catch(error => console.error(error));\n\n  const makePromise = (text, delay) => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(text), delay);\n  });\n};\n\nconst promiseA = makePromise(\"promiseA value\", 1000);\nconst promiseB = makePromise(\"promiseB value\", 3000);\n\nPromise.all([promiseA, promiseB])\n  .then(value => console.log(value)) //[\"promiseA value\", \"promiseB value\"]\n  .catch(error => console.log(error));\n  "],"names":["document","querySelector","addEventListener","setTimeout","alert","console","log","$c861d392a1244ede$var$date","Date","getFullYear","username","Promise","resolve","reject","concat","then","user","catch","error","$c861d392a1244ede$var$makePromise","text","delay","$c861d392a1244ede$var$promiseA","$c861d392a1244ede$var$promiseB","all","value"],"version":3,"file":"04-training.075b1b6c.js.map"}